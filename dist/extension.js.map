{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://pressMusic/./node_modules/find-exec/index.js","webpack://pressMusic/./src/playCenter.ts","webpack://pressMusic/./src/player.ts","webpack://pressMusic/external commonjs \"vscode\"","webpack://pressMusic/external node-commonjs \"child_process\"","webpack://pressMusic/external node-commonjs \"fs\"","webpack://pressMusic/external node-commonjs \"os\"","webpack://pressMusic/external node-commonjs \"path\"","webpack://pressMusic/webpack/bootstrap","webpack://pressMusic/./src/extension.ts"],"sourcesContent":["var exec = require('child_process').execSync\nvar platform = require('os').platform()\n\nmodule.exports = function(){\n  var commands = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.apply(arguments)\n  var command = null\n\n  commands.some(function(c){\n    if (isExec(findCommand(c))){\n      command = c\n      return true\n    }\n  })\n\n  return command\n}\n\nfunction isExec(command){\n  try{\n    exec(command)\n    return true\n  }\n  catch (_e){\n    return false\n  }\n}\n\nfunction findCommand(command){\n  if (/^win/.test(platform)){\n    return \"where \" + command\n  } else {\n    return \"command -v \" + command\n  }\n}\n","import * as vscode from 'vscode';\nimport player from './player';\n\nconst keymMap = {\n    q: 1,\n    w: 2,\n    e: 3,\n    r: 4,\n    t: 5,\n    y: 6,\n    u: 7,\n    i: 8,\n    o: 9,\n    p: 10,\n    a: 1,\n    s: 2,\n    d: 3,\n    f: 4,\n    g: 5,\n    h: 6,\n    j: 7,\n    k: 8,\n    l: 9,\n    z: 1,\n    x: 2,\n    c: 3,\n    v: 4,\n    b: 5,\n    n: 6,\n    m: 7,\n    otherDo: 11,\n    otherTi: 12,\n};\n\nexport default class PlayCenter{\n    opt: string;\n    timer: NodeJS.Timeout | undefined;\n    constructor(opt: string){\n        this.opt = opt || 'default';\n        this.reminder();\n    }\n    reminder(){\n        const config = vscode.workspace.getConfiguration('pressMusic');\n        const reminderTime = config.get<number>('reminderTime', 1);\n        const reminderEnabled = config.get<boolean>('reminderEnabled', true);\n        if(!reminderEnabled){\n            return;\n        }\n        this.timer = setInterval(()=>{\n            this.play('reminderTime');\n            vscode.window.showInformationMessage('是时候休息一下啦啦啦~~~ pressMusic reminder');\n        }, reminderTime*60*60*1000);\n    }\n    play(text: string){\n        if(text === 'reminderTime') {\n            player.play(`./music/test.mp3`, {}, (err: any)=>{\n                console.log('err:', err);\n            });\n            return;\n        }\n        let keyText = '';\n        if(text === '\\n'){\n            keyText = 'otherDo';\n        } else if (text.trim() === \"\"){\n            keyText = 'otherTi';\n        } else {\n            keyText = text.trim();\n        }\n\n        player.play(`./music/${keymMap[keyText]}.mp3`, {}, (err: any)=>{\n            console.log('err:', err);\n        });\n    }\n    dispose(){\n        this.timer && clearInterval(this.timer);\n    }\n}","var fs               = require('fs')\n  , findExec         = require('find-exec')\n  , spawn            = require('child_process').spawn\n  , players          = [\n      'afplay',\n      'mplayer',\n                        'mpg123',\n                        'mpg321',\n                        'play',\n                        'omxplayer',\n                        'aplay',\n                        'cmdmp3'\n                       ];\nconst path = require('path');\n\nclass Play{\n    opts: any;\n    players: any;\n    player: any;\n    urlRegex: RegExp;\n    constructor(opts: any){\n        this.opts = opts || {};\n        this.players       = opts.players       || players;\n        this.player        = opts.player        || findExec(this.players);\n        this.urlRegex      = /^(https?|ftp):\\/\\/[^\\s\\/$.?#].[^\\s]*$/i;\n    }\n    play(what:any, options:any, next?:any){\n          next  = next || function(){};\n          next  = typeof options === 'function' ? options : next;\n          options = typeof options === 'object' ? options : {};\n          options.stdio = 'ignore';\n          options.volume = 20;\n      \n          var isURL = this.player === 'mplayer' && this.urlRegex.test(what);\n      \n          if (!what) {return next(new Error(\"No audio file specified\"));};\n      \n          if (!this.player){\n            return next(new Error(\"Couldn't find a suitable audio player\"));\n          }\n\n          var args = Array.isArray(options[this.player]) ? options[this.player].concat(what) : [what];\n          const videoPath = args.map((pathString: string)=>{\n            return path.join(__dirname, pathString);\n          });\n          var process = spawn(this.player, videoPath, options);\n          if (!process) {\n            next(new Error(\"Unable to spawn process with \" + this.player));\n            return null;\n          }\n          process.on('close',function(err: any){ \n              next(err && !err.killed ? err : null); });\n          return process;\n        };\n    test(){\n        this.play('./music/test.mp3', {});\n    }\n}\n\nconst player = new Play({});\nexport default player;\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport PlayCenter from './playCenter';\n\nlet documentChangeListenerDisposer: vscode.Disposable|null = null;\nlet statusBarPause: vscode.StatusBarItem;\nlet statusBarPlay: vscode.StatusBarItem;\n\nlet isStop = false;\n// config values\nlet enabled = true;\nlet playCenter:PlayCenter|null = null;\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\tvscode.workspace.onDidChangeConfiguration(onDidChangeConfiguration);\n    onDidChangeConfiguration();\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n\tif(playCenter) {\n\t\tplayCenter.dispose();\n\t}\n\tif (documentChangeListenerDisposer) {\n        documentChangeListenerDisposer.dispose();\n        documentChangeListenerDisposer = null;\n    }\n}\n\nfunction onDidChangeConfiguration() {\n\tconst config = vscode.workspace.getConfiguration('pressMusic');\n\tenabled = config.get<boolean>('enabled', true);\n\tif(enabled){\n\t\tinit(config);\n\t} else {\n\t\tdeactivate();\n\t}\n}\nfunction init(config: vscode.WorkspaceConfiguration){\n\t// clear all\n\tdeactivate();\n\t// set status bar item\n\tsetVolContraller();\n\t// set listener\n\tplayCenter = new PlayCenter(config.get<string>('type', 'piano'));\n\tdocumentChangeListenerDisposer = vscode.workspace.onDidChangeTextDocument(onDidChangeTextDocument);\n}\n\nfunction setVolContraller(){\n\tconst pauseCommandId = 'pressMusic.pause';\n\tvscode.commands.registerCommand(pauseCommandId, onchangeVolume);\n\n\tstatusBarPause = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 300);\n\tstatusBarPause.command = pauseCommandId;\n\tstatusBarPause.text = \"$(debug-pause) PressMusic\";\n\tstatusBarPause.tooltip = \"stop press music!\";\n\t\n\tstatusBarPlay = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 300);\n\tstatusBarPlay.command = pauseCommandId;\n\tstatusBarPlay.text = \"$(run) PressMusic\";\n\tstatusBarPlay.tooltip = \"play press music!\";\n\n\tstatusBarPause.show();\n}\n\nfunction changeVolumeController(){\n\tif(isStop){\n\t\tstatusBarPause.hide();\n\t\tstatusBarPlay.show();\n\t} else {\n\t\tstatusBarPlay.hide();\n\t\tstatusBarPause.show();\n\t}\n}\n\nfunction onchangeVolume() {\n\tisStop = !isStop;\n\tchangeVolumeController();\n\tvscode.window.showInformationMessage(isStop ? 'pressMusic已经暂停!!!' : '已经开启pressMusic，enjoy~~~');\n}\n\nfunction onDidChangeTextDocument(event: vscode.TextDocumentChangeEvent){\n\tconst text = event.contentChanges?.[0].text;\n\t!isStop && playCenter?.play(text);\n}"],"names":["exec","platform","isExec","command","_e","findCommand","test","module","exports","commands","Array","isArray","arguments","prototype","slice","apply","some","c","keymMap","q","w","e","r","t","y","u","i","o","p","a","s","d","f","g","h","j","k","l","z","x","v","b","n","m","otherDo","otherTi","constructor","opt","this","reminder","config","vscode","workspace","getConfiguration","reminderTime","get","timer","setInterval","play","window","showInformationMessage","text","err","console","log","keyText","trim","dispose","clearInterval","findExec","spawn","players","path","player","opts","urlRegex","what","options","next","stdio","volume","Error","videoPath","concat","map","pathString","join","__dirname","process","on","killed","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","statusBarPause","statusBarPlay","documentChangeListenerDisposer","isStop","enabled","playCenter","deactivate","onDidChangeConfiguration","pauseCommandId","registerCommand","onchangeVolume","createStatusBarItem","StatusBarAlignment","Left","tooltip","show","setVolContraller","onDidChangeTextDocument","init","hide","event","contentChanges","context"],"sourceRoot":""}